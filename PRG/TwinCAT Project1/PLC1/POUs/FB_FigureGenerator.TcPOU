<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_FigureGenerator" Id="{8808e3f7-7f1f-4aaa-8e06-f743502ab299}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_FigureGenerator
VAR_INPUT
	bGenerate		: BOOL; //generate Figure
	bStar			: BOOL; // generate Star if True
	bClockwise		: BOOL; // clockwise Figure
	bContinus		: BOOL; // Figure continus or Point to Point?
	nCornerCountInp	: INT := 5; //how many corners to generate
	rRadius1		: REAL := 50;  //Radius from center to a corner
	rRadius2		: REAL := 10;  //Radius from center to a corner
	rAngleOffset	: REAL := 0; //Offset of the Figure angle
	rFigureTime		: REAL := 5; //Time for the whole figure [S]
END_VAR
VAR_OUTPUT
	pFigure : POINTER TO Figure;
END_VAR
VAR 
	bStarIntern : BOOL;
	rRadius : REAL;
	rRadius_next : REAL;
	nCornerCount : UINT;
	PI		: REAL := 4 * ATAN(1);
	angle : REAL;
	x_corner : REAL;
	y_corner  : REAL;
	angle_next : REAL;
	x_corner_next  : REAL;
	y_corner_next  : REAL;
	edge_length : REAL;
	Step : REAL := 0;
	counter : UINT := 0;
	counter1 : UDINT := 0;
	counter2 : UDINT := 0;
	Figure : Figure;
	rEdgeTime : REAL;
	points_on_edge : UDINT;
	adjusted_a : REAL;
	a : REAL;
	nDir : INT := 1;
	pVisu : POINTER TO ARRAY[0..200] OF VisuElems.VisuStructPoint;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[ //Parameters
(*a = 5  // Distance between points
n = 10 // Number of corners
r = 80  // Radius from center to a corner*)
pFigure := ADR(Figure);
rFigureTime := LIMIT(0.01,rFigureTime, 100);
rEdgeTime := rFigureTime / nCornerCount *1000;
counter2 := 0;
IF bClockwise THEN
	nDir := -1;
ELSE
	nDir := 1;
END_IF

IF bStar THEN
	nCornerCount := 2 * nCornercountInp;
	bStarIntern := TRUE;
ELSE
	nCornerCount := nCornercountInp;
	bStarIntern := FALSE;
END_IF

IF bGenerate THEN
	FOR counter := 0 TO nCornerCount-1 BY 1 DO
		IF bStarIntern AND counter MOD 2 = 0 THEN
			rRadius := rRadius1;
			rRadius_next := rRadius2;
		ELSIF bStarIntern AND counter MOD 2 <> 0 THEN
			rRadius := rRadius2;
			rRadius_next := rRadius1;
		ELSE
			rRadius := rRadius1;
			rRadius_next := rRadius1;
		END_IF
		// Calculate corner coordinates
		angle := 2 * PI * counter / nCornerCount * nDir;
		x_corner := rRadius * COS(angle);
		y_corner := rRadius * SIN(angle);
	
		// Calculate next corner coordinates
		angle_next := 2 * PI * (counter + 1) / nCornerCount * nDir;
		x_corner_next := rRadius_next * COS(angle_next);
		y_corner_next := rRadius_next * SIN(angle_next);
	
		// Calculate the distance between corners (edge length)
		edge_length := SQRT(EXPT(x_corner_next - x_corner,2) + EXPT(y_corner_next - y_corner,2));
	
		// Adjust a for this edge to fit perfectly
		a:= edge_length / rEdgeTime;
		points_on_edge := REAL_TO_UINT(edge_length / a); 
		adjusted_a := edge_length / points_on_edge;   
	
		// Generate points on this edge
		Figure.Visu[counter].iX := REAL_TO_INT((x_corner)+ 392/2)*3;
		Figure.Visu[counter].iY := REAL_TO_INT((y_corner)+ 318/2)*3;
		FOR counter1 := 0 TO points_on_edge-1 DO
			IF bContinus THEN
				Figure.X[counter2] := x_corner + counter1 * adjusted_a * (x_corner_next - x_corner) / edge_length;
				Figure.Y[counter2] := y_corner + counter1 * adjusted_a * (y_corner_next - y_corner) / edge_length;
			ELSE
				Figure.X[counter2] := x_corner;
				Figure.Y[counter2] := y_corner;
			END_IF
			counter2 := counter2 +1;
		END_FOR
 	END_FOR
	Figure.Visu[counter].iX := REAL_TO_INT((x_corner_next)+ 392/2)*3;
	Figure.Visu[counter].iY := REAL_TO_INT((y_corner_next)+ 318/2)*3;
	Figure.VisuLenght := nCornerCount + 1;
 	Figure.length := counter2;
	pVisu := ADR(Figure.Visu);
	bGenerate := FALSE;
END_IF	]]></ST>
    </Implementation>
    <LineIds Name="FB_FigureGenerator">
      <LineId Id="13" Count="3" />
      <LineId Id="92" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="197" Count="1" />
      <LineId Id="200" Count="1" />
      <LineId Id="199" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="172" Count="1" />
      <LineId Id="189" Count="0" />
      <LineId Id="175" Count="1" />
      <LineId Id="191" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="203" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="179" Count="1" />
      <LineId Id="182" Count="6" />
      <LineId Id="181" Count="0" />
      <LineId Id="22" Count="14" />
      <LineId Id="134" Count="0" />
      <LineId Id="37" Count="2" />
      <LineId Id="129" Count="1" />
      <LineId Id="40" Count="0" />
      <LineId Id="205" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="206" Count="1" />
      <LineId Id="209" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="131" Count="1" />
      <LineId Id="192" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="91" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>